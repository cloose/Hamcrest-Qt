{"name":"Hamcrest-qt","tagline":"Hamcrest matchers for C++/Qt","body":"Hamcrest-Qt\r\n===========\r\n\r\n[Hamcrest](http://hamcrest.org/) matchers for C++/Qt\r\n\r\nThis is an attempt to port the [Java Hamcrest](https://github.com/hamcrest/JavaHamcrest) library to C++/Qt and make it usable with [Qt Test](http://qt-project.org/doc/qt-5.1/qttestlib/qttest-index.html).\r\n\r\nLike the original library, this code is licensed under [BSD 3-Clause License](http://opensource.org/licenses/BSD-3-Clause).\r\n\r\n# EXPERIMENTAL\r\nThis code is pre-alpha quality. DO NOT USE IN PRODUCTION CODE.\r\n\r\n\r\n## Supported Matchers\r\n\r\n#### allOf\r\n\r\nCreates a matcher that matches if the examined object matches **ALL** of the specified matchers.\r\n\r\n    ASSERT_THAT(QStringLiteral(\"myValue\"), allOf(startsWith(\"my\"), containsString(\"Val\")));\r\n\r\n#### anyOf\r\n\r\nCreates a matcher that matches if the examined object matches **ANY** of the specified matchers.\r\n\r\n    ASSERT_THAT(QStringLiteral(\"myValue\"), anyOf(startsWith(\"foo\"), containsString(\"Val\")));\r\n\r\n#### containsString\r\n\r\nCreates a matcher that matches if the examined QString contains the specified\r\nQString anywhere.\r\n\r\n    ASSERT_THAT(QStringLiteral(\"myStringOfNote\"), containsString(\"ring\"));\r\n\r\n#### endsWith\r\n\r\nCreates a matcher that matches if the examined QString ends with the specified\r\nQString.\r\n\r\n    ASSERT_THAT(QStringLiteral(\"myStringOfNote\"), endsWith(\"Note\"));\r\n\r\n#### equalTo\r\n\r\nCreates a matcher that matches when the examined object is logically equal to the specified `operand`, as determined by calling the operator==() method on the **examined** object.\r\n\r\n    ASSERT_THAT(QStringLiteral(\"foo\"), equalTo(\"foo\"));\r\n\r\n#### is\r\n\r\nDecorates another Matcher, retaining its behaviour, but allowing tests to be slightly more expressive.\r\n\r\n    ASSERT_THAT(cheese, is(equalTo(smelly)));\r\n\r\n#### _not\r\n\r\nCreates a matcher that wraps an existing matcher, but inverts the logic by which it will match.\r\n\r\n    ASSERT_THAT(cheese, is(_not(equalTo(smelly))));\r\n\r\n#### startsWith\r\n\r\n\r\nCreates a matcher that matches if the examined QString starts with the specified\r\nQString.\r\n\r\n    ASSERT_THAT(QStringLiteral(\"myStringOfNote\"), startsWith(\"my\"));\r\n","google":"UA-46374644-1","note":"Don't delete this file! It's used internally to help with page regeneration."}